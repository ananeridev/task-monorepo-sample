name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: tasks
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: docker build -t your-dockerhub-username/task-management-backend:latest ./backend

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push your-dockerhub-username/task-management-backend:latest

      - name: Set up Kubernetes
        uses: azure/k8s-deploy@v1
        with:
          namespace: task-management-namespace
          manifests: |
            infra/k8s/deployment.yaml
            infra/k8s/service.yaml
            infra/k8s/secrets.yaml
            infra/k8s/namespace.yaml
          images: |
            your-dockerhub-username/task-management-backend:latest
